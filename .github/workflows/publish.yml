name: ðŸš€ publish

on:
  push:
    branches: [ main ]
  schedule:
    - cron:  '0 0 * * *'

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: ðŸ”ƒ Checkout
        uses: actions/checkout@v3

      - name: âš™ Setup python
        uses: actions/setup-python@v3

      - name: âš™ Setup poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: â¬‡ Download cache
        uses: actions/cache@v2
        id: cached-poetry-dependencies
        with:
          path: .venv
          key: venv-${{ secrets.CACHE_VERSION }}-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

      - name: âš™ Setup builder
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      - name: ðŸ›  Build dataset
        run: |
          poetry run get-comments
          mkdir -p out
          poetry run publish

      - name: ðŸ“Œ Setup docs branch
        run: |
         git config --local user.email 'action@github.com'
         git config --local user.name 'GitHub Action'
         git checkout --orphan gh-pages
         git reset
         touch .nojekyll
         git add .nojekyll
         git add out/* -f
         git mv out/* ./ -k
         git commit -m 'ci: pubish'
      - name: ðŸš€ Publish docs
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          force: true
          branch: gh-pages
